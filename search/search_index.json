{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Tundra Lab's documentation Please use the menu to select an article of interest. If you find an issue with this documentation or have a feature request, please submit a request in Github .","title":"Home"},{"location":"#welcome-to-tundra-labs-documentation","text":"Please use the menu to select an article of interest. If you find an issue with this documentation or have a feature request, please submit a request in Github .","title":"Welcome to Tundra Lab's documentation"},{"location":"fusion360_json/","text":"Under construction, for now, refer to this: https://github.com/TriadSemi/Fusion360_SteamVR_Json","title":"JSON generation in Fusion360"},{"location":"hardware_id/","text":"SteamVR Hardware ID (HWID) Each SteamVR device is identified by its hardware id (HWID). This is a 32bit number that is typically expressed in hexadecimal format. The hardware ID is broken down into 0x AA BB CC DD AA - The Vendor Code Byte Value Meaning 0x F0 xx xx xx xx Tundra Labs Products 0x 90 xx xx xx xx Generic HDK Designs - Typically supplied by Triad Semiconductor or Synapes 0x 8x xx xx xx xx HTC Products 0x 1x xx xx xx xx Valve Products 0x 2x xx xx xx xx Valve Products BB - Major Revision These are typically specific to the Vendor, the relevant revisions are listed below: Byte Value Meaning 0x 90 03 xx xx SteamVR HDK and Triad Shoto HDK 0x F0 00 xx xx Tundra Labs TL448K6D-GP-HDK CC - Minor Revision The minor revision is also set by the vendor, in all current cases this value is set to 00 DD - Sensor Version The sensor Byte Value Meaning 0x xx xx xx 00 Gen 1 only: Discrete Optical Sensor (Used in Original Vive) 0x xx xx xx 04 Gen 1 only: Triad Semiconductor TS3633 (Used in Tracker Developer Edition) 0x xx xx xx 06 Gen 1 & 2: Triad Semiconductor TS4231 (Used in Vive Pro, Gen 2 Tracker and Pro Controllers) 0x xx xx xx 09 Gen 1 & 2: Triad Semiconductor TS4631 (Used in Valve Index and Index Controllers) Combining Bytes to form a Complete HWID Byte Value Meaning 0x 90 03 00 04 Original HDK from Triad Semiconductor using TS3633 0x 90 03 00 06 Shoto HDK from Triad Semiconductor using TS4231 0x 90 03 00 09 Shoto HDK from Triad Semiconductor using TS4112 0x F0 00 00 09 TL448K6D-GP-HDK from Tundra Labs using TS4112 Reading the Hardware ID from a SteamVR Device The principle way to read the Hardware ID is when the device is in Bootloader Mode , to put the device into bootloader mode, connect it to a PC via USB and issue the following command: lighthouse_watchman_update.exe -bw3 The device will disconnect from USB, jump to Bootloader Mode and then re-enumerate. The device will notify the user that it is in Bootloader Mode with a rapidly flashing Red LED . Once in Bootloader Mode , the Hardware ID can be checked with the following command: lighthouse_watchman_update.exe -aw3 The following is an example output of this command with the Hardware ID highlighted: Changing the Hardware ID If you have determined that the Hardware ID is not correct, you may change it with the following command: lighthouse_watchman_update.exe -Bw3 0xF0000009 Note the device must be in Bootloader Mode in order to write in a new Hardware ID. Refer to the section above for instructions on how to place the device into bootloader mode. Note After the Hardware ID is written to a device, it will reboot and exit Bootloader Mode Why is the Hardware ID Important? The SteamVR firmware is compiled into a universal binary that supports running on many different hardware targets. The hardware id \"tells\" the firmware what hardware that it is running on an configures itself for that particular hardware. In some cases, the device will not function with an incorrect hardware ID. Specific to Optical Sensors, each sensor also has tuned parameters to optimize it's performance in SteamVR. In order to use the correct tuning values, the correct sensor must be identified. If an incorrect sensor is identified in the hardware id, it may still track but the performance could be erratic and unpredictable.","title":"SteamVR Hardware ID"},{"location":"hardware_id/#steamvr-hardware-id-hwid","text":"Each SteamVR device is identified by its hardware id (HWID). This is a 32bit number that is typically expressed in hexadecimal format. The hardware ID is broken down into 0x AA BB CC DD","title":"SteamVR Hardware ID (HWID)"},{"location":"hardware_id/#aa-the-vendor-code","text":"Byte Value Meaning 0x F0 xx xx xx xx Tundra Labs Products 0x 90 xx xx xx xx Generic HDK Designs - Typically supplied by Triad Semiconductor or Synapes 0x 8x xx xx xx xx HTC Products 0x 1x xx xx xx xx Valve Products 0x 2x xx xx xx xx Valve Products","title":"AA - The Vendor Code"},{"location":"hardware_id/#bb-major-revision","text":"These are typically specific to the Vendor, the relevant revisions are listed below: Byte Value Meaning 0x 90 03 xx xx SteamVR HDK and Triad Shoto HDK 0x F0 00 xx xx Tundra Labs TL448K6D-GP-HDK","title":"BB - Major Revision"},{"location":"hardware_id/#cc-minor-revision","text":"The minor revision is also set by the vendor, in all current cases this value is set to 00","title":"CC - Minor Revision"},{"location":"hardware_id/#dd-sensor-version","text":"The sensor Byte Value Meaning 0x xx xx xx 00 Gen 1 only: Discrete Optical Sensor (Used in Original Vive) 0x xx xx xx 04 Gen 1 only: Triad Semiconductor TS3633 (Used in Tracker Developer Edition) 0x xx xx xx 06 Gen 1 & 2: Triad Semiconductor TS4231 (Used in Vive Pro, Gen 2 Tracker and Pro Controllers) 0x xx xx xx 09 Gen 1 & 2: Triad Semiconductor TS4631 (Used in Valve Index and Index Controllers)","title":"DD - Sensor Version"},{"location":"hardware_id/#combining-bytes-to-form-a-complete-hwid","text":"Byte Value Meaning 0x 90 03 00 04 Original HDK from Triad Semiconductor using TS3633 0x 90 03 00 06 Shoto HDK from Triad Semiconductor using TS4231 0x 90 03 00 09 Shoto HDK from Triad Semiconductor using TS4112 0x F0 00 00 09 TL448K6D-GP-HDK from Tundra Labs using TS4112","title":"Combining Bytes to form a Complete HWID"},{"location":"hardware_id/#reading-the-hardware-id-from-a-steamvr-device","text":"The principle way to read the Hardware ID is when the device is in Bootloader Mode , to put the device into bootloader mode, connect it to a PC via USB and issue the following command: lighthouse_watchman_update.exe -bw3 The device will disconnect from USB, jump to Bootloader Mode and then re-enumerate. The device will notify the user that it is in Bootloader Mode with a rapidly flashing Red LED . Once in Bootloader Mode , the Hardware ID can be checked with the following command: lighthouse_watchman_update.exe -aw3 The following is an example output of this command with the Hardware ID highlighted:","title":"Reading the Hardware ID from a SteamVR Device"},{"location":"hardware_id/#changing-the-hardware-id","text":"If you have determined that the Hardware ID is not correct, you may change it with the following command: lighthouse_watchman_update.exe -Bw3 0xF0000009 Note the device must be in Bootloader Mode in order to write in a new Hardware ID. Refer to the section above for instructions on how to place the device into bootloader mode. Note After the Hardware ID is written to a device, it will reboot and exit Bootloader Mode","title":"Changing the Hardware ID"},{"location":"hardware_id/#why-is-the-hardware-id-important","text":"The SteamVR firmware is compiled into a universal binary that supports running on many different hardware targets. The hardware id \"tells\" the firmware what hardware that it is running on an configures itself for that particular hardware. In some cases, the device will not function with an incorrect hardware ID. Specific to Optical Sensors, each sensor also has tuned parameters to optimize it's performance in SteamVR. In order to use the correct tuning values, the correct sensor must be identified. If an incorrect sensor is identified in the hardware id, it may still track but the performance could be erratic and unpredictable.","title":"Why is the Hardware ID Important?"},{"location":"hmd_designer/","text":"under construction","title":"Valve's HMD Designer GUI"},{"location":"imu_calibration/","text":"IMU Calibration run \"imu_calibrator.exe\" This page is under construction","title":"IMU Calibration"},{"location":"imu_calibration/#imu-calibration","text":"run \"imu_calibrator.exe\" This page is under construction","title":"IMU Calibration"},{"location":"optical_calibration/","text":"Optical Calibration tutorial Calibrate with one Generation 1 Basestation: Note: The Gen1 Lighthouse should be in mode \"A\" and no other Basestations should be in view Note: The Device must be connected via USB for calibration vrtrackingcalib.exe /bodycal ht_4p.json 800 200 Calibrate with one Generation 2 Basestation: Note: The Device must be connected via USB for calibration vrtrackingcalib.exe /usedisambiguation synconbeam /bodycal ht_4p.json 800 200 Calibrate a device with some (no hits) Sensors Note: The Device must be connected via USB for calibration Note: This is not recommended for production and should only be used in prototypes where the defective sensor can not be repaired - Tracking Performance may suffer! vrtrackingcalib.exe /deletemissingsensors /usedisambiguation synconbeam /bodycal ht_4p.json 800 200","title":"Optical Calibration"},{"location":"optical_calibration/#optical-calibration-tutorial","text":"","title":"Optical Calibration tutorial"},{"location":"optical_calibration/#calibrate-with-one-generation-1-basestation","text":"Note: The Gen1 Lighthouse should be in mode \"A\" and no other Basestations should be in view Note: The Device must be connected via USB for calibration vrtrackingcalib.exe /bodycal ht_4p.json 800 200","title":"Calibrate with one Generation 1 Basestation:"},{"location":"optical_calibration/#calibrate-with-one-generation-2-basestation","text":"Note: The Device must be connected via USB for calibration vrtrackingcalib.exe /usedisambiguation synconbeam /bodycal ht_4p.json 800 200","title":"Calibrate with  one Generation 2 Basestation:"},{"location":"optical_calibration/#calibrate-a-device-with-some-no-hits-sensors","text":"Note: The Device must be connected via USB for calibration Note: This is not recommended for production and should only be used in prototypes where the defective sensor can not be repaired - Tracking Performance may suffer! vrtrackingcalib.exe /deletemissingsensors /usedisambiguation synconbeam /bodycal ht_4p.json 800 200","title":"Calibrate a device with some (no hits) Sensors"},{"location":"pairing_instructions/","text":"HDK Pairing Instructions Connect the TL448K6D-GP-HDK to your PC via USB Cable Connect a SteamVR Dongle to the PC Open Two Lighthouse Console Instances: In the image above, you will see that two Lighthouse devices are available for connection, LHR-19294AB1 and 48590C3441. Any serial number beginning with \u201cLHR\u201d is a Tracked object device, in this case it is the TL448K6D-GP-HDK. Serial numbers that do not begin with LHR are typically dongles. Normally when Lighthouse Console initializes, the first LHR device is connected to by default. In one of the two Lighthouse console windows, type the command \u201cserial \u201d to change the connection to the dongle. In this example \u201cserial 48590C3441\u201d will be used: Now we can see that the left lighthouse console is connected to the LHR device and the right one is connected to the dongle. Type the command \u201cpair\u201d into both consoles when entering Pair on each device, they will both begin the pairing process. When pairing occurs, the TL448K6D-GP-HDK will briefly connect to the dongle over wireless and then reconnect via usb. This is normal and signifies that the pairing process has completed successfully. At this point you may test the wireless connection by disconnecting the TL448K6D-GP-HDK from USB and powering on via battery power. When you do this, the Left Lighthouse Console will disconnect and the right will establish a full wireless connection. From this point forward, your TL448K6D-GP-HDK will connect to the dongle via wireless:","title":"Pairing your HDK"},{"location":"pairing_instructions/#hdk-pairing-instructions","text":"Connect the TL448K6D-GP-HDK to your PC via USB Cable Connect a SteamVR Dongle to the PC Open Two Lighthouse Console Instances: In the image above, you will see that two Lighthouse devices are available for connection, LHR-19294AB1 and 48590C3441. Any serial number beginning with \u201cLHR\u201d is a Tracked object device, in this case it is the TL448K6D-GP-HDK. Serial numbers that do not begin with LHR are typically dongles. Normally when Lighthouse Console initializes, the first LHR device is connected to by default. In one of the two Lighthouse console windows, type the command \u201cserial \u201d to change the connection to the dongle. In this example \u201cserial 48590C3441\u201d will be used: Now we can see that the left lighthouse console is connected to the LHR device and the right one is connected to the dongle. Type the command \u201cpair\u201d into both consoles when entering Pair on each device, they will both begin the pairing process. When pairing occurs, the TL448K6D-GP-HDK will briefly connect to the dongle over wireless and then reconnect via usb. This is normal and signifies that the pairing process has completed successfully. At this point you may test the wireless connection by disconnecting the TL448K6D-GP-HDK from USB and powering on via battery power. When you do this, the Left Lighthouse Console will disconnect and the right will establish a full wireless connection. From this point forward, your TL448K6D-GP-HDK will connect to the dongle via wireless:","title":"HDK Pairing Instructions"},{"location":"prototyping/","text":"SteamVR Prototyping Methods Under construction, For now please refer to the following presentation in your SteamVR HDK Documentation C:\\Program Files (x86)\\Steam\\steamapps\\common\\SteamVR Tracking HDK\\training\\presentations\\175_ufo_exercise.pdf","title":"Physical Prototyping"},{"location":"prototyping/#steamvr-prototyping-methods","text":"Under construction, For now please refer to the following presentation in your SteamVR HDK Documentation C:\\Program Files (x86)\\Steam\\steamapps\\common\\SteamVR Tracking HDK\\training\\presentations\\175_ufo_exercise.pdf","title":"SteamVR Prototyping Methods"},{"location":"steamvr_license_setup/","text":"Under construction, until this page is setup, please refer to: http://help.triadsemi.com/en/articles/836947-how-to-get-access-to-steamvr-hdk-in-steam","title":"Get Access to the SteamVR HDK"},{"location":"tracked_device_design_goals/","text":"Under construction For now please refer to the following presentation in your SteamVR HDK Documentation C:\\Program Files (x86)\\Steam\\steamapps\\common\\SteamVR Tracking HDK\\training\\presentations\\030_object_design.pdf","title":"Design Goals"},{"location":"valve_steamvr_documentation/","text":"Typically after you complete the SteamVR HDK License , you will obtain access to the SteamVR HDK in Steam. This will download a folder to your PC's Steam folder. Typically the Steam Folder is located in: C:\\Program Files (x86)\\Steam The location where you will find the documentation is: C:\\Program Files (x86)\\Steam\\steamapps\\common\\SteamVR Tracking HDK Please refer to the \\docs folder for documents and the \\traning folder for guided presentation slides","title":"Valve's SteamVR Tracking Documentation"}]}